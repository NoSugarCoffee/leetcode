<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>类别 on LeetCode solutions</title><link>https://nosugarcoffee.github.io/leetcode/docs/</link><description>Recent content in 类别 on LeetCode solutions</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://nosugarcoffee.github.io/leetcode/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>剑指 offer</title><link>https://nosugarcoffee.github.io/leetcode/docs/%E5%89%91%E6%8C%87-offer/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nosugarcoffee.github.io/leetcode/docs/%E5%89%91%E6%8C%87-offer/readme/</guid><description>04. 二维数组中的查找 # leetcode
// ../../../../src/main/java/com/dll/offer/Offer04.java package com.dll.offer; public class Offer04 { class Solution { public boolean findNumberIn2DArray(int[][] matrix, int target) { int rows; if (matrix == null || (rows = matrix.length) &amp;lt; 1) { return false; } int cols = matrix[0].length; int i = 0; int j = cols - 1; while (i &amp;lt; rows &amp;amp;&amp;amp; j &amp;gt; -1) { int upperRightCorner = matrix[i][j]; if (upperRightCorner == target) { return true; } else if (upperRightCorner &amp;gt; target) { j--; } else { i++; } } return false; } } } 05.</description></item></channel></rss>